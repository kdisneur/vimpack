// Code generated by MockGen. DO NOT EDIT.
// Source: internal/ui.go

// Package mock_internal is a generated GoMock package.
package mock_internal

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
	internal "vimpack/internal"
)

// MockUIFormatter is a mock of UIFormatter interface
type MockUIFormatter struct {
	ctrl     *gomock.Controller
	recorder *MockUIFormatterMockRecorder
}

// MockUIFormatterMockRecorder is the mock recorder for MockUIFormatter
type MockUIFormatterMockRecorder struct {
	mock *MockUIFormatter
}

// NewMockUIFormatter creates a new mock instance
func NewMockUIFormatter(ctrl *gomock.Controller) *MockUIFormatter {
	mock := &MockUIFormatter{ctrl: ctrl}
	mock.recorder = &MockUIFormatterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUIFormatter) EXPECT() *MockUIFormatterMockRecorder {
	return m.recorder
}

// Print mocks base method
func (m *MockUIFormatter) Print(w io.Writer, plugins []*internal.UIPlugin) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Print", w, plugins)
}

// Print indicates an expected call of Print
func (mr *MockUIFormatterMockRecorder) Print(w, plugins interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Print", reflect.TypeOf((*MockUIFormatter)(nil).Print), w, plugins)
}
